"""add migration

Revision ID: 928f1adc2c1c
Revises: 
Create Date: 2023-06-09 02:15:08.517724

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '928f1adc2c1c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('m_account',
    sa.Column('account_id', sa.Integer(), nullable=False, comment='アカウントID'),
    sa.Column('account_cd', sa.String(length=100), nullable=True, comment='アカウントコード:社員番号など利用企業のIDやコードのため'),
    sa.Column('ext_account_id', sa.Integer(), nullable=True, comment='外部アカウントID:cognitoなどの外部認証サービスと連携する場合は設定'),
    sa.Column('account_name', sa.String(length=100), nullable=True, comment='アカウント名'),
    sa.Column('email_address', sa.String(length=100), nullable=True, comment='メールアドレス'),
    sa.Column('account_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='ステータス:0：仮登録、1：本登録、2：削除'),
    sa.Column('is_system_manager', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='システム管理フラグ:アプリケーションで設定/更新しないこと'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.String(length=200), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.String(length=200), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.String(length=200), nullable=True, comment='削除'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('m_gen_code',
    sa.Column('gen_code_id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(length=50), nullable=True),
    sa.Column('field_name', sa.String(length=50), nullable=True),
    sa.Column('field_value', sa.Integer(), nullable=True),
    sa.Column('field_display_label', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('gen_code_id')
    )
    op.create_table('m_prefecture',
    sa.Column('pref_id', sa.Integer(), nullable=False, comment='県ID'),
    sa.Column('pref_name', sa.String(length=200), nullable=True, comment='名前県'),
    sa.PrimaryKeyConstraint('pref_id')
    )
    op.create_table('m_base',
    sa.Column('base_id', sa.Integer(), nullable=False, comment='拠点ID'),
    sa.Column('base_cd', sa.String(length=200), nullable=True, comment='拠点コード'),
    sa.Column('base_name', sa.String(length=200), nullable=True, comment='拠点名'),
    sa.Column('zip_code', sa.String(length=10), nullable=True, comment='郵便番号'),
    sa.Column('pref_code', sa.Integer(), nullable=False, comment='都道府県コード'),
    sa.Column('address', sa.String(length=400), nullable=True, comment='住所'),
    sa.Column('addressee', sa.String(length=200), nullable=True, comment='受取名:配送や郵送時の受信名'),
    sa.Column('telephone_number', sa.String(length=200), nullable=True, comment='電話番号'),
    sa.Column('fax_number', sa.String(length=200), nullable=True, comment='FAX番号'),
    sa.Column('e_mail_address', sa.String(length=200), nullable=True, comment='メールアドレス'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['pref_code'], ['m_prefecture.pref_id'], ),
    sa.PrimaryKeyConstraint('base_id')
    )
    op.create_table('m_depreciation_rule',
    sa.Column('depreciation_rule_id', sa.Integer(), nullable=False),
    sa.Column('depreciation_rule_name', sa.String(length=100), nullable=True),
    sa.Column('fiscal_year', sa.Integer(), nullable=True, comment='年度:YYYY'),
    sa.Column('base_year', sa.Date(), nullable=True, comment='費用'),
    sa.Column('amount_per_year', sa.Float(), nullable=True, comment='費用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('depreciation_rule_id')
    )
    op.create_table('m_group',
    sa.Column('group_id', sa.Integer(), nullable=False, comment='グループID:1以上であること'),
    sa.Column('group_name', sa.String(length=200), nullable=True, comment='グループ名称'),
    sa.Column('group_cd', sa.String(length=200), nullable=True, comment='グループコード'),
    sa.Column('parent_group_id', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='親グループID:0 は親グループが無し'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_table('m_item_type',
    sa.Column('item_type_id', sa.Integer(), nullable=False, comment='タイプID'),
    sa.Column('item_type_name', sa.String(length=400), nullable=True, comment='タイプ名称'),
    sa.Column('can_be_main', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='メイン可フラグ:0：不可、1：可（主にPCを想定）'),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='表示順'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('item_type_id')
    )
    op.create_table('m_kitting',
    sa.Column('kitting_master_id', sa.Integer(), nullable=False, comment='キッティングマスタID'),
    sa.Column('kitting_master_name', sa.String(length=200), nullable=True, comment='キッティングマスタ名称'),
    sa.Column('master_pc_number', sa.Integer(), nullable=True, comment='マスターPC番号'),
    sa.Column('kitting_method', sa.String(length=50), nullable=True, comment='キッティング方法'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('kitting_master_id')
    )
    op.create_table('m_maker',
    sa.Column('maker_id', sa.Integer(), nullable=False, comment='メーカーID'),
    sa.Column('maker_name', sa.String(length=200), nullable=True, comment='メーカー名称'),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='表示順'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('area', sa.String(length=200), nullable=True, comment='エリア:hokkaido：北海道, tohoku：東北, kanto_koushinetsu：関東甲信, hokuriku：北陸, tokai：東海,kinki：近畿,chugoku：中国,shikoku：四国,kyushu：九州,okinawa：沖縄'),
    sa.Column('zip_code', sa.String(length=10), nullable=True, comment='郵便番号'),
    sa.Column('pref_code', sa.Integer(), nullable=False, comment='都道府県コード'),
    sa.Column('city', sa.String(length=200), nullable=True, comment='市区町村'),
    sa.Column('street', sa.String(length=200), nullable=True, comment='番地'),
    sa.Column('building', sa.String(length=200), nullable=True, comment='建物'),
    sa.Column('pilot_number', sa.String(length=200), nullable=True, comment='代表電話番号'),
    sa.Column('department', sa.String(length=200), nullable=True, comment='担当部署'),
    sa.Column('pic', sa.String(length=200), nullable=True, comment='担当者'),
    sa.Column('direct_number', sa.String(length=200), nullable=True, comment='担当電話番号'),
    sa.Column('direct_email_address', sa.String(length=200), nullable=True, comment='担当メールアドレス'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['pref_code'], ['m_prefecture.pref_id'], ),
    sa.PrimaryKeyConstraint('maker_id')
    )
    op.create_table('m_operation',
    sa.Column('operation_id', sa.Integer(), nullable=False, comment='オペレーションID'),
    sa.Column('operation_name', sa.String(length=200), nullable=True, comment='オペレーション名'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('operation_id')
    )
    op.create_table('m_order',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('company_order', sa.String(length=255), nullable=True),
    sa.Column('address_order', sa.String(length=255), nullable=True),
    sa.Column('description_order', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='created_at'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='created_by'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='modified_at'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='modified_by'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='deleted_at'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='deleted_by'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='is_deleted'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('m_outsourcing_company',
    sa.Column('outsourcing_company_id', sa.Integer(), nullable=False, comment='委託先ID'),
    sa.Column('outsourcing_company_name', sa.String(length=200), nullable=True, comment='委託先名称'),
    sa.Column('area', sa.String(length=200), nullable=True, comment='エリア:hokkaido：北海道, tohoku：東北, kanto_koushinetsu：関東甲信, hokuriku：北陸, tokai：東海,kinki：近畿,chugoku：中国,shikoku：四国,kyushu：九州,okinawa：沖縄'),
    sa.Column('zip_code', sa.String(length=10), nullable=True, comment='郵便番号'),
    sa.Column('pref_code', sa.Integer(), nullable=False, comment='都道府県コード'),
    sa.Column('city', sa.String(length=200), nullable=True, comment='市区町村'),
    sa.Column('street', sa.String(length=200), nullable=True, comment='番地'),
    sa.Column('building', sa.String(length=200), nullable=True, comment='建物'),
    sa.Column('pilot_number', sa.String(length=200), nullable=True, comment='代表電話番号'),
    sa.Column('department', sa.String(length=200), nullable=True, comment='担当部署'),
    sa.Column('pic', sa.String(length=200), nullable=True, comment='担当者'),
    sa.Column('direct_number', sa.String(length=200), nullable=True, comment='担当電話番号'),
    sa.Column('direct_email_address', sa.String(length=200), nullable=True, comment='担当メールアドレス'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='表示順'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['pref_code'], ['m_prefecture.pref_id'], ),
    sa.PrimaryKeyConstraint('outsourcing_company_id')
    )
    op.create_table('m_role',
    sa.Column('role_id', sa.Integer(), nullable=False, comment='ロールID'),
    sa.Column('role_name', sa.String(length=200), nullable=True, comment='ロール名'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('m_supplier',
    sa.Column('supplier_id', sa.Integer(), nullable=False, comment='発注先ID'),
    sa.Column('supplier_name', sa.String(length=200), nullable=True, comment='発注先名称'),
    sa.Column('zip_code', sa.String(length=10), nullable=True, comment='郵便番号'),
    sa.Column('pref_code', sa.Integer(), nullable=False, comment='都道府県コード'),
    sa.Column('city', sa.String(length=200), nullable=True, comment='市区町村'),
    sa.Column('street', sa.String(length=200), nullable=True, comment='番地'),
    sa.Column('building', sa.String(length=200), nullable=True, comment='建物'),
    sa.Column('pilot_number', sa.String(length=200), nullable=True, comment='代表電話番号'),
    sa.Column('department', sa.String(length=200), nullable=True, comment='担当部署'),
    sa.Column('pic', sa.String(length=200), nullable=True, comment='担当者'),
    sa.Column('direct_number', sa.String(length=200), nullable=True, comment='担当電話番号'),
    sa.Column('direct_email_address', sa.String(length=200), nullable=True, comment='担当メールアドレス'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='表示順'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['pref_code'], ['m_prefecture.pref_id'], ),
    sa.PrimaryKeyConstraint('supplier_id')
    )
    op.create_table('t_message',
    sa.Column('message_id', sa.Integer(), nullable=False, comment='メッセージID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='タイトル'),
    sa.Column('message', sa.Text(), nullable=True, comment='メッセージ'),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='発信日'),
    sa.Column('created_account_id', sa.Integer(), nullable=True, comment='送付者ID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('t_notification',
    sa.Column('notification_id', sa.Integer(), nullable=False, comment='通知ID'),
    sa.Column('notification_cd', sa.String(length=36), nullable=True, comment='通知コード:yyyymmdd0000 通知日時＋連番'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='件名'),
    sa.Column('body', sa.Text(), nullable=True, comment='内容'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('t_procurement',
    sa.Column('procurement_id', sa.Integer(), nullable=False, comment='調達ID'),
    sa.Column('procurement_name', sa.String(length=200), nullable=True, comment='調達名称'),
    sa.Column('procurement_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='調達ステータス:0：作成中、1：見積依頼、2：見積回答、3：承認依頼、4：承認済、5：発注依頼、6：発注済、7：無効（削除）'),
    sa.Column('is_back', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='差戻フラグ:0：対象外、1：対象(差戻状態である)'),
    sa.Column('quotation_requester', sa.Integer(), nullable=True, comment='見積依頼者'),
    sa.Column('quotation_request_note', sa.String(length=2000), nullable=True, comment='見積依頼備考'),
    sa.Column('quotation_request_datetime', sa.DateTime(), nullable=True, comment='見積依頼日時'),
    sa.Column('quotation_account_id', sa.Integer(), nullable=True, comment='見積担当者'),
    sa.Column('quotation_note', sa.String(length=2000), nullable=True, comment='見積回答備考'),
    sa.Column('quotation_datetime', sa.DateTime(), nullable=True, comment='見積回答日時'),
    sa.Column('approval_requester', sa.Integer(), nullable=True, comment='承認依頼者'),
    sa.Column('approval_expiration_date', sa.Date(), nullable=True, comment='承認期限'),
    sa.Column('approval_request_note', sa.String(length=2000), nullable=True, comment='承認依頼備考'),
    sa.Column('approval_request_datetime', sa.DateTime(), nullable=True, comment='承認依頼日時'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='承認者'),
    sa.Column('approval_note', sa.String(length=2000), nullable=True, comment='承認備考'),
    sa.Column('approval_datetime', sa.DateTime(), nullable=True, comment='承認日時'),
    sa.Column('total_amount', sa.BIGINT(), nullable=True),
    sa.Column('ext_approval_id', sa.String(length=100), nullable=True, comment='外部承認ID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['approval_requester'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['quotation_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['quotation_requester'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('procurement_id')
    )
    op.create_table('t_support',
    sa.Column('support_id', sa.Integer(), nullable=False, comment='問合せID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='タイトル'),
    sa.Column('note', sa.Text(), nullable=True, comment='対応内容'),
    sa.Column('created_datetime', sa.DateTime(), nullable=True, comment='登録日'),
    sa.Column('created_account_id', sa.Integer(), nullable=True, comment='登録者ID'),
    sa.Column('modified_datetime', sa.DateTime(), nullable=True, comment='更新日'),
    sa.Column('modified_account_id', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('completion_from', sa.DateTime(), nullable=True, comment='完了日'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('support_id')
    )
    op.create_table('m_account_base',
    sa.Column('account_base_id', sa.Integer(), nullable=False, comment='アカウントベースID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('base_id', sa.Integer(), nullable=True, comment='拠点ID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['base_id'], ['m_base.base_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('account_base_id')
    )
    op.create_table('m_account_group',
    sa.Column('account_group_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False, comment='アカウントID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('is_manager', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='管理者フラグ'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['m_group.group_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('account_group_id')
    )
    op.create_table('m_account_role',
    sa.Column('account_id', sa.Integer(), nullable=False, comment='アカウントID'),
    sa.Column('role_id', sa.Integer(), nullable=True, comment='ロールID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['m_role.role_id'], ),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('m_item',
    sa.Column('item_id', sa.Integer(), nullable=False, comment='品目ID'),
    sa.Column('item_name', sa.String(length=200), nullable=True, comment='品目名称'),
    sa.Column('jan_code', sa.String(length=13), nullable=True, comment='JANコード'),
    sa.Column('maker_id', sa.Integer(), nullable=False, comment='メーカーID'),
    sa.Column('maker_model', sa.String(length=200), nullable=True, comment='メーカー型番'),
    sa.Column('asset_type', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='資産区分:0：一般、1：ライセンス'),
    sa.Column('expiration_date_from', sa.Date(), nullable=True, comment='有効開始日'),
    sa.Column('expiration_date_to', sa.Date(), nullable=True, comment='有効終了日'),
    sa.Column('serial_number', sa.String(length=100), nullable=True, comment='物理資産ID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('os_id', sa.Integer(), nullable=True, comment='OS'),
    sa.Column('order_unit', sa.Integer(), nullable=True, comment='発注単位数量'),
    sa.Column('order_unit_max', sa.Integer(), nullable=True, comment='最大発注単位量'),
    sa.Column('price', sa.Integer(), nullable=True, comment='単価'),
    sa.Column('tax', sa.Integer(), nullable=True, comment='税'),
    sa.Column('tax_inc_price', sa.Float(), nullable=True, comment='税には価格が含まれます'),
    sa.Column('item_title', sa.String(length=200), nullable=True, comment='商品タイトル:未指定の場合は「品目名称」を設定'),
    sa.Column('item_description', sa.Text(), nullable=True, comment='商品説明'),
    sa.Column('item_image', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['maker_id'], ['m_maker.maker_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('m_item_set',
    sa.Column('item_id_set', sa.Integer(), nullable=False, comment='セット用品目ID:セット用の品目の品目ID'),
    sa.Column('item_set_type', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('item_set_name', sa.String(length=200), nullable=True),
    sa.Column('item_set_jan_code', sa.String(length=13), nullable=True),
    sa.Column('item_set_maker_id', sa.Integer(), nullable=False),
    sa.Column('item_set_maker_model', sa.String(length=200), nullable=True),
    sa.Column('item_set_os', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('item_set_expiration_date_from', sa.Date(), nullable=True),
    sa.Column('item_set_expiration_date_to', sa.Date(), nullable=True),
    sa.Column('tax_inc_price', sa.Float(), nullable=True, comment='税には価格が含まれます'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['item_set_maker_id'], ['m_maker.maker_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('item_id_set')
    )
    op.create_table('m_order_detail',
    sa.Column('order_detail_id', sa.Integer(), nullable=False, comment='order_detail_id'),
    sa.Column('order_id', sa.Integer(), nullable=True, comment='order_id'),
    sa.Column('description_order_detail', sa.String(length=255), nullable=True, comment='description_order_detail'),
    sa.Column('status_order_detail', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='status_order_detail'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='created_at'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='created_by'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='modified_at'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='modified_by'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='deleted_at'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='deleted_by'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='is_deleted'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['m_order.order_id'], ),
    sa.PrimaryKeyConstraint('order_detail_id')
    )
    op.create_table('m_role_operation',
    sa.Column('role_id', sa.Integer(), nullable=False, comment='ロールID'),
    sa.Column('operation_id', sa.Integer(), nullable=True, comment='オペレーションID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['operation_id'], ['m_operation.operation_id'], ),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('t_asset_set',
    sa.Column('asset_id_set', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('asset_set_type', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('asset_set_name', sa.String(length=200), nullable=True),
    sa.Column('asset_set_jan_code', sa.String(length=13), nullable=True),
    sa.Column('asset_set_maker_id', sa.Integer(), nullable=False),
    sa.Column('asset_set_maker_model', sa.String(length=200), nullable=True),
    sa.Column('asset_set_os', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('asset_set_expiration_date_from', sa.Date(), nullable=True),
    sa.Column('asset_set_expiration_date_to', sa.Date(), nullable=True),
    sa.Column('tax_inc_price', sa.Float(), nullable=True, comment='税には価格が含まれます'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['asset_set_maker_id'], ['m_maker.maker_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('asset_id_set')
    )
    op.create_table('t_notification_to',
    sa.Column('notification_id', sa.Integer(), nullable=False, comment='通知先ID:自動採番'),
    sa.Column('notification_to_type', sa.String(length=100), nullable=True, comment='通知先区分:0：アカウント、1：グループ、2：ベース'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('base_id', sa.Integer(), nullable=True, comment='拠点ID'),
    sa.Column('notification_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='通知ステータス:temporarily'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['base_id'], ['m_base.base_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['m_group.group_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('m_item_set_item',
    sa.Column('item_set_item_id', sa.Integer(), nullable=False),
    sa.Column('item_id_set', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False, comment='品目ID:セットされる個別の品目ID'),
    sa.Column('is_main', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='メインフラグ:0：非メイン、1：メイン品目。「メイン可」の品目タイプの品目が対象'),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='表示順'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['m_item.item_id'], ),
    sa.ForeignKeyConstraint(['item_id_set'], ['m_item_set.item_id_set'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('item_set_item_id')
    )
    op.create_table('t_order',
    sa.Column('order_id', sa.Integer(), nullable=False, comment='発注明細ID:自動採番'),
    sa.Column('procurement_id', sa.Integer(), nullable=False, comment='調達ID'),
    sa.Column('item_id', sa.Integer(), nullable=True, comment='品目ID'),
    sa.Column('item_id_set', sa.Integer(), nullable=True, comment='セット用品目ID:セット用の品目の品目ID'),
    sa.Column('depreciation_rule_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='数量'),
    sa.Column('amount', sa.Float(), nullable=True, comment='小計'),
    sa.Column('has_users_file', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='利用者ファイル有無:0：なし、1：あり実ファイルはS3の以下に格納。バケット名/{調達ID}/{発注明細ID}+"_users_"+[アップロードした時のファイル名]'),
    sa.Column('has_quotation_file', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='見積有無:0：なし、1：あり実ファイルはS3の以下に格納。バケット名/{調達ID}/{発注明細ID}+"_quotation_"+[アップロードした時のファイル名]：'),
    sa.Column('estimated_arrival_date', sa.Date(), nullable=True, comment='入荷予定日'),
    sa.Column('estimated_shipping_date', sa.Date(), nullable=True, comment='出荷予定日'),
    sa.Column('kitting_master_id', sa.Integer(), nullable=True, comment='キッティングマスタID'),
    sa.Column('record_type', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='計上方式'),
    sa.Column('supplier_id', sa.Integer(), nullable=True, comment='発注先ID'),
    sa.Column('order_on', sa.Date(), nullable=True, comment='発注日'),
    sa.Column('has_order_file', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='エビデンスファイル有無:0：なし、1：あり実ファイルはS3の以下に格納。バケット名/{調達ID}/{発注明細ID}+"_order_"+[アップロードした時のファイル名]'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['depreciation_rule_id'], ['m_depreciation_rule.depreciation_rule_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['m_item.item_id'], ),
    sa.ForeignKeyConstraint(['item_id_set'], ['m_item_set.item_id_set'], ),
    sa.ForeignKeyConstraint(['kitting_master_id'], ['m_kitting.kitting_master_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['procurement_id'], ['t_procurement.procurement_id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['m_supplier.supplier_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('t_arrival',
    sa.Column('arrival_id', sa.Integer(), nullable=False, comment='資産ID:資産登録前だが資産IDとする'),
    sa.Column('arrival_code', sa.String(length=200), nullable=True, comment='資産コード'),
    sa.Column('is_asset', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='資産登録フラグ:0：未、1：済'),
    sa.Column('inspection_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='検品ステータス:0：未,1：合格,2：不合格'),
    sa.Column('inspection_status_note', sa.String(length=400), nullable=True, comment='検査ステータスノート'),
    sa.Column('inspection_date', sa.Date(), nullable=True, comment='検査日'),
    sa.Column('inspection_account_id', sa.Integer(), nullable=True, comment='検品担当者'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('asset_approve_account_id', sa.Integer(), nullable=True),
    sa.Column('using_from', sa.Date(), nullable=True),
    sa.Column('using_to', sa.Date(), nullable=True),
    sa.Column('failure_action', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='不合格処理:0：未,1：返品(再入荷待ち),2：返品(再入荷済),3：返品(再入荷なし)'),
    sa.Column('failure_action_note', sa.String(length=400), nullable=True, comment='障害アクションノート'),
    sa.Column('order_id', sa.Integer(), nullable=True, comment='発注明細ID'),
    sa.Column('item_id', sa.Integer(), nullable=True, comment='品目ID'),
    sa.Column('item_name_kana', sa.String(length=400), nullable=True, comment='品目名称カナ'),
    sa.Column('item_type_id', sa.Integer(), nullable=True, comment='タイプID'),
    sa.Column('price', sa.Integer(), nullable=True, comment='単価'),
    sa.Column('base_id', sa.Integer(), nullable=True, comment='入荷拠点ID'),
    sa.Column('arrival_type', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='入荷方法:0：発注,1：持ち込み'),
    sa.Column('arrival_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='入荷日'),
    sa.Column('record_type', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='計上方式'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_approve_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['base_id'], ['m_base.base_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['inspection_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['m_item.item_id'], ),
    sa.ForeignKeyConstraint(['item_type_id'], ['m_item_type.item_type_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['t_order.order_id'], ),
    sa.PrimaryKeyConstraint('arrival_id')
    )
    op.create_table('t_asset',
    sa.Column('asset_id', sa.Integer(), nullable=False, comment='資産ID'),
    sa.Column('asset_name_kana', sa.String(length=500), nullable=True, comment='資産名称カナ'),
    sa.Column('asset_cd', sa.String(length=100), nullable=True, comment='資産コード'),
    sa.Column('asset_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='資産ステータス:0：在庫(stock), 1：キッティング中(kitting), 2：出荷中(shipping), 3：集荷中(pickingup), 4：修理中(repairing), 5：廃棄中(disposing), 6：利用中(using), 7：廃棄済み(disposed)'),
    sa.Column('arrival_id', sa.Integer(), nullable=False, comment='資産ID'),
    sa.Column('kitting_master_id', sa.Integer(), nullable=True, comment='キッティングマスタID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('using_from', sa.Date(), nullable=True),
    sa.Column('using_to', sa.Date(), nullable=True),
    sa.Column('asset_kind', sa.String(length=50), nullable=True, comment='資産種別:set_desktop：デスクトップセット,set_laptop：ノートセット,desktop：デスクトップ,laptop：ノート,tablet：タブレット,device：機器,software_without_license：ソフトウェア(ライセンスなし),software_with_license：ソフトウェア(ライセンスあり),cloud_license：クラウドライセンス'),
    sa.Column('asset_type', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='資産区分:0：一般、1：ライセンス'),
    sa.Column('asset_from', sa.Date(), nullable=True, comment='資産開始日'),
    sa.Column('asset_to', sa.Date(), nullable=True, comment='資産終了日'),
    sa.Column('parent_asset_id', sa.Integer(), nullable=True, comment='親資産ID'),
    sa.Column('record_type', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='計上方式'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['arrival_id'], ['t_arrival.arrival_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['kitting_master_id'], ['m_kitting.kitting_master_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('asset_id')
    )
    op.create_table('t_asset_depreciation',
    sa.Column('asset_depreciation_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('depreciation_rule_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['depreciation_rule_id'], ['m_depreciation_rule.depreciation_rule_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('asset_depreciation_id')
    )
    op.create_table('t_asset_set_asset',
    sa.Column('asset_set_asset_id', sa.Integer(), nullable=False),
    sa.Column('asset_id_set', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('is_main', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='メインフラグ:0：非メイン、1：メイン品目。「メイン可」の品目タイプの品目が対象'),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='表示順'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['asset_id_set'], ['t_asset_set.asset_id_set'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('asset_set_asset_id')
    )
    op.create_table('t_disposal',
    sa.Column('disposal_id', sa.Integer(), nullable=False, comment='廃棄ID'),
    sa.Column('disposal_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='廃棄ステータス: 0：未, 1：中, 2：完了'),
    sa.Column('outsourcing_company_id', sa.Integer(), nullable=True, comment='委託先ID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['outsourcing_company_id'], ['m_outsourcing_company.outsourcing_company_id'], ),
    sa.PrimaryKeyConstraint('disposal_id')
    )
    op.create_table('t_kitting',
    sa.Column('kitting_id', sa.Integer(), nullable=False, comment='キットID'),
    sa.Column('kitting_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='キッティングステータス: 0：未, 1：中, 2：完了'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('kitting_user_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('hardware_confirm_account_id', sa.Integer(), nullable=True),
    sa.Column('software_confirm_account_id', sa.Integer(), nullable=True),
    sa.Column('kitting_confirm_account_id', sa.Integer(), nullable=True),
    sa.Column('functional_confirm_account_id', sa.Integer(), nullable=True),
    sa.Column('kitting_comment', sa.String(length=50), nullable=True),
    sa.Column('kitting_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['functional_confirm_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['hardware_confirm_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['kitting_confirm_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['kitting_user_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['software_confirm_account_id'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('kitting_id')
    )
    op.create_table('t_pick_up',
    sa.Column('pick_up_id', sa.Integer(), nullable=False, comment='集荷ID'),
    sa.Column('pick_up_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='集荷ステータス: 0：未, 1：中, 2：完了'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('pick_up_type', sa.Integer(), nullable=True, comment='集荷区分: 0:集荷待ち（返却）1:集荷待ち（修理）'),
    sa.Column('pick_up_arrangement_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='集荷手配日'),
    sa.Column('pick_up_scheduled_date', sa.Date(), nullable=True, comment='集荷予定日'),
    sa.Column('completed_on', sa.Date(), nullable=True, comment='集荷完了日'),
    sa.Column('outsourcing_company_id', sa.Integer(), nullable=True, comment='委託先ID'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['outsourcing_company_id'], ['m_outsourcing_company.outsourcing_company_id'], ),
    sa.PrimaryKeyConstraint('pick_up_id')
    )
    op.create_table('t_repairing',
    sa.Column('repairing_id', sa.Integer(), nullable=False, comment='修理ID'),
    sa.Column('repairing_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='修理ステータス: 0：未, 1：中, 2：完了'),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('outsourcing_company_id', sa.Integer(), nullable=True, comment='委託先ID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['outsourcing_company_id'], ['m_outsourcing_company.outsourcing_company_id'], ),
    sa.PrimaryKeyConstraint('repairing_id')
    )
    op.create_table('t_shipping',
    sa.Column('shipping_id', sa.Integer(), nullable=False, comment='出荷ID'),
    sa.Column('shipping_reception_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='出荷受付ステータス'),
    sa.Column('shipping_reception_type', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('estimated_shipping_date', sa.Date(), nullable=True),
    sa.Column('shipping_late', sa.Boolean(), server_default=sa.text('False'), nullable=False),
    sa.Column('shipping_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='出荷ステータス: 0：未, 1：中, 2：完了'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('reception_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='受付日'),
    sa.Column('working_on', sa.Date(), nullable=True, comment='作業開始日時'),
    sa.Column('completed_on', sa.Date(), nullable=True, comment='完了日時'),
    sa.Column('outsourcing_company_id', sa.Integer(), nullable=True, comment='委託先ID'),
    sa.Column('note', sa.Text(), nullable=True, comment='備考'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['outsourcing_company_id'], ['m_outsourcing_company.outsourcing_company_id'], ),
    sa.PrimaryKeyConstraint('shipping_id')
    )
    op.create_table('t_use',
    sa.Column('use_id', sa.Integer(), nullable=False, comment='利用ID'),
    sa.Column('use_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='利用ステータス: 0：未, 1：中, 2：完了'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('use_on_from', sa.Date(), nullable=True, comment='利用開始日'),
    sa.Column('use_on_to', sa.Date(), nullable=True, comment='利用終了日'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('base_id', sa.Integer(), nullable=True, comment='拠点ID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['base_id'], ['m_base.base_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['m_group.group_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('use_id')
    )
    op.create_table('t_user_request',
    sa.Column('request_id', sa.Integer(), nullable=False, comment='申請ID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('request_menu', sa.Integer(), nullable=True, comment='申請メニュー'),
    sa.Column('request_status', sa.Integer(), nullable=True, comment='申請状況'),
    sa.Column('request_type', sa.Integer(), nullable=True, comment='申請種類'),
    sa.Column('request_datetime', sa.DateTime(), nullable=True, comment='申請日'),
    sa.Column('request_account_id', sa.Integer(), nullable=True, comment='申請者ID'),
    sa.Column('request_group_id', sa.Integer(), nullable=True, comment='申請グループID'),
    sa.Column('substitute_asset_id', sa.String(length=36), nullable=True, comment='代替資産ID'),
    sa.Column('request_completion_date', sa.DateTime(), nullable=True, comment='対応完了希望日'),
    sa.Column('note', sa.Text(), nullable=True, comment='要望'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['m_group.group_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['request_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['request_group_id'], ['m_group.group_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('t_user_request')
    op.drop_table('t_use')
    op.drop_table('t_shipping')
    op.drop_table('t_repairing')
    op.drop_table('t_pick_up')
    op.drop_table('t_kitting')
    op.drop_table('t_disposal')
    op.drop_table('t_asset_set_asset')
    op.drop_table('t_asset_depreciation')
    op.drop_table('t_asset')
    op.drop_table('t_arrival')
    op.drop_table('t_order')
    op.drop_table('m_item_set_item')
    op.drop_table('t_notification_to')
    op.drop_table('t_asset_set')
    op.drop_table('m_role_operation')
    op.drop_table('m_order_detail')
    op.drop_table('m_item_set')
    op.drop_table('m_item')
    op.drop_table('m_account_role')
    op.drop_table('m_account_group')
    op.drop_table('m_account_base')
    op.drop_table('t_support')
    op.drop_table('t_procurement')
    op.drop_table('t_notification')
    op.drop_table('t_message')
    op.drop_table('m_supplier')
    op.drop_table('m_role')
    op.drop_table('m_outsourcing_company')
    op.drop_table('m_order')
    op.drop_table('m_operation')
    op.drop_table('m_maker')
    op.drop_table('m_kitting')
    op.drop_table('m_item_type')
    op.drop_table('m_group')
    op.drop_table('m_depreciation_rule')
    op.drop_table('m_base')
    op.drop_table('m_prefecture')
    op.drop_table('m_gen_code')
    op.drop_table('m_account')
    # ### end Alembic commands ###
