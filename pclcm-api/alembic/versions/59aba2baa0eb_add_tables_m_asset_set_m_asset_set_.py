"""Add tables m_asset_set, m_asset_set_asset and add column account_id,using_from,using_to into t_arrival; column item_id_set into t_order; column tax_inc_price into m_item_set

Revision ID: 59aba2baa0eb
Revises: b55c6e6a30f1
Create Date: 2023-01-18 14:09:00.496971

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '59aba2baa0eb'
down_revision = 'b55c6e6a30f1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('m_asset_set',
    sa.Column('item_id_set', sa.Integer(), nullable=False, comment='セット用品目ID:セット用の品目の品目ID'),
    sa.Column('item_set_type', sa.String(length=36), nullable=True),
    sa.Column('item_set_name', sa.String(length=200), nullable=True),
    sa.Column('item_set_jan_code', sa.String(length=13), nullable=True),
    sa.Column('item_set_maker_id', sa.Integer(), nullable=False),
    sa.Column('item_set_maker_model', sa.String(length=200), nullable=True),
    sa.Column('item_set_os', sa.String(length=36), nullable=True),
    sa.Column('item_set_expiration_date_from', sa.Date(), nullable=True),
    sa.Column('item_set_expiration_date_to', sa.Date(), nullable=True),
    sa.Column('tax_inc_price', sa.Float(), nullable=True, comment='税には価格が含まれます'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['item_set_maker_id'], ['m_maker.maker_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('item_id_set')
    )
    op.create_table('m_asset_set_asset',
    sa.Column('item_set_item_id', sa.Integer(), nullable=False),
    sa.Column('item_id_set', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False, comment='品目ID:セットされる個別の品目ID'),
    sa.Column('is_main', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='メインフラグ:0：非メイン、1：メイン品目。「メイン可」の品目タイプの品目が対象'),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='表示順'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['m_item.item_id'], ),
    sa.ForeignKeyConstraint(['item_id_set'], ['m_item_set.item_id_set'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('item_set_item_id')
    )
    op.alter_column('m_account_base', 'account_base_id',
               existing_type=mysql.INTEGER(),
               comment='アカウントベースID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('m_account_base', 'account_id',
               existing_type=mysql.INTEGER(),
               nullable=True,
               comment='アカウントID')
    op.add_column('m_item_set', sa.Column('tax_inc_price', sa.Float(), nullable=True, comment='税には価格が含まれます'))
    op.add_column('t_arrival', sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'))
    op.add_column('t_arrival', sa.Column('using_from', sa.DateTime(), nullable=True))
    op.add_column('t_arrival', sa.Column('using_to', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 't_arrival', 'm_account', ['account_id'], ['account_id'])
    op.alter_column('t_disposal', 'outsourcing_company_id',
               existing_type=mysql.INTEGER(),
               nullable=True,
               existing_comment='委託先ID')
    op.add_column('t_order', sa.Column('item_id_set', sa.Integer(), nullable=True, comment='セット用品目ID:セット用の品目の品目ID'))
    op.add_column('t_order', sa.Column('kitting_master_id', sa.Integer(), nullable=True, comment='キッティングマスタID'))
    op.drop_constraint('t_order_ibfk_8', 't_order', type_='foreignkey')
    op.create_foreign_key(None, 't_order', 'm_item_set', ['item_id_set'], ['item_id_set'])
    op.create_foreign_key(None, 't_order', 'm_kitting', ['kitting_master_id'], ['kitting_master_id'])
    op.drop_column('t_order', 'kitting_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('t_order', sa.Column('kitting_id', mysql.INTEGER(), autoincrement=False, nullable=True, comment='キッティングマスタID'))
    op.drop_constraint(None, 't_order', type_='foreignkey')
    op.drop_constraint(None, 't_order', type_='foreignkey')
    op.create_foreign_key('t_order_ibfk_8', 't_order', 't_kitting', ['kitting_id'], ['kitting_id'])
    op.drop_column('t_order', 'kitting_master_id')
    op.drop_column('t_order', 'item_id_set')
    op.alter_column('t_disposal', 'outsourcing_company_id',
               existing_type=mysql.INTEGER(),
               nullable=False,
               existing_comment='委託先ID')
    op.drop_constraint(None, 't_arrival', type_='foreignkey')
    op.drop_column('t_arrival', 'using_to')
    op.drop_column('t_arrival', 'using_from')
    op.drop_column('t_arrival', 'account_id')
    op.drop_column('m_item_set', 'tax_inc_price')
    op.alter_column('m_account_base', 'account_id',
               existing_type=mysql.INTEGER(),
               nullable=False,
               comment=None,
               existing_comment='アカウントID')
    op.alter_column('m_account_base', 'account_base_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='アカウントベースID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_table('m_asset_set_asset')
    op.drop_table('m_asset_set')
    # ### end Alembic commands ###
