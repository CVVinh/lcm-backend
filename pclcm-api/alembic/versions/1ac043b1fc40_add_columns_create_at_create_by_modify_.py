"""Add columns create_at, create_by, modify_at, modify_by, deleted_at, deleted_by, is_deleted into table m_depreciation_rule

Revision ID: 1ac043b1fc40
Revises: 29b78adcf718
Create Date: 2023-02-22 15:36:31.324344

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1ac043b1fc40'
down_revision = '29b78adcf718'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('m_depreciation_rule', sa.Column('created_at', sa.DateTime(
    ), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'))
    op.add_column('m_depreciation_rule', sa.Column(
        'created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'))
    op.add_column('m_depreciation_rule', sa.Column('modified_at', sa.DateTime(
    ), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'))
    op.add_column('m_depreciation_rule', sa.Column(
        'modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'))
    op.add_column('m_depreciation_rule', sa.Column(
        'deleted_at', sa.DateTime(), nullable=True, comment='削除日時'))
    op.add_column('m_depreciation_rule', sa.Column(
        'deleted_by', sa.Integer(), nullable=True, comment='削除者'))
    op.add_column('m_depreciation_rule', sa.Column('is_deleted', sa.Boolean(
    ), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'))
    op.create_foreign_key(None, 'm_depreciation_rule', 'm_account', [
                          'created_by'], ['account_id'])
    op.create_foreign_key(None, 'm_depreciation_rule', 'm_account', [
                          'deleted_by'], ['account_id'])
    op.create_foreign_key(None, 'm_depreciation_rule', 'm_account', [
                          'modified_by'], ['account_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
