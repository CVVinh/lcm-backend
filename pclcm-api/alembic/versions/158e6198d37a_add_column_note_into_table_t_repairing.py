"""Add column note into table t_repairing

Revision ID: 158e6198d37a
Revises: 6d58845d9432
Create Date: 2023-02-15 15:11:27.866405

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '158e6198d37a'
down_revision = '6d58845d9432'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('t_message',
    sa.Column('message_id', sa.Integer(), nullable=False, comment='メッセージID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='タイトル'),
    sa.Column('message', sa.Text(), nullable=True, comment='メッセージ'),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='発信日'),
    sa.Column('created_account_id', sa.Integer(), nullable=True, comment='送付者ID'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('t_support',
    sa.Column('support_id', sa.Integer(), nullable=False, comment='問合せID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='タイトル'),
    sa.Column('note', sa.Text(), nullable=True, comment='対応内容'),
    sa.Column('created_datetime', sa.DateTime(), nullable=True, comment='登録日'),
    sa.Column('created_account_id', sa.Integer(), nullable=True, comment='登録者ID'),
    sa.Column('modified_datetime', sa.DateTime(), nullable=True, comment='更新日'),
    sa.Column('modified_account_id', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('completion_from', sa.DateTime(), nullable=True, comment='完了日'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.PrimaryKeyConstraint('support_id')
    )
    op.create_table('t_user_request',
    sa.Column('request_id', sa.Integer(), nullable=False, comment='申請ID'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='グループID'),
    sa.Column('account_id', sa.Integer(), nullable=True, comment='アカウントID'),
    sa.Column('asset_id', sa.Integer(), nullable=True, comment='資産ID'),
    sa.Column('request_menu', sa.Integer(), nullable=True, comment='申請メニュー'),
    sa.Column('request_status', sa.Integer(), nullable=True, comment='申請状況'),
    sa.Column('request_type', sa.Integer(), nullable=True, comment='申請種類'),
    sa.Column('request_datetime', sa.DateTime(), nullable=True, comment='申請日'),
    sa.Column('request_account_id', sa.Integer(), nullable=True, comment='申請者ID'),
    sa.Column('request_group_id', sa.Integer(), nullable=True, comment='申請グループID'),
    sa.Column('substitute_asset_id', sa.String(length=36), nullable=True, comment='代替資産ID'),
    sa.Column('request_completion_date', sa.DateTime(), nullable=True, comment='対応完了希望日'),
    sa.Column('note', sa.Text(), nullable=True, comment='要望'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['t_asset.asset_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['m_group.group_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['request_account_id'], ['m_account.account_id'], ),
    sa.ForeignKeyConstraint(['request_group_id'], ['m_group.group_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    op.alter_column('t_asset', 'account_id',
               existing_type=mysql.INTEGER(),
               comment='資産ID',
               existing_nullable=True)
    op.add_column('t_repairing', sa.Column('note', sa.Text(), nullable=True, comment='備考'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('t_repairing', 'note')
    op.alter_column('t_asset', 'account_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='資産ID',
               existing_nullable=True)
    op.drop_table('t_user_request')
    op.drop_table('t_support')
    op.drop_table('t_message')
    # ### end Alembic commands ###
